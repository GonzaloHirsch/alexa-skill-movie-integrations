#Â Info on the action
name: Automatic Release
run-name: ${{ github.actor }} is automatically releasing ðŸš€

# Only run on push to master
on:
    push:
        branches:
            - master
    workflow_dispatch

jobs:
    terraform_deploy:
        runs-on: ubuntu-latest
        steps:
            - name: 'Checking out code'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            # Setting up Terraform to be able to use it afterwards
            - name: 'Terraform Setup'
              uses: hashicorp/setup-terraform@v2
            # Makes sure the Terraform code is correctly formatted
            - name: 'Terraform Format'
              run: terraform fmt -check -recursive
              working-directory: terraform
            # Initialize Terraform
            - name: 'Terraform Init'
              run: terraform init
              working-directory: terraform
            # Validate the Terraform configuration
            - name: 'Terraform Validate'
              run: terraform validate -no-color
              working-directory: terraform
            # Apply the Terraform configuration
            - name: 'Terraform Apply'
              run: terraform apply --auto-approve
              working-directory: terraform
              # Make sure we have the correct environment variables as secrets
              env:
                  TF_VAR_project_id: ${{ secrets.project_id }}
                  TF_VAR_region: ${{ secrets.region }}
                  TF_VAR_backend_url: ${{ secrets.backend_url }}
                  TF_VAR_backend_key: ${{ secrets.backend_key }}
    # As per https://github.com/semantic-release/semantic-release/blob/master/docs/recipes/ci-configurations/github-actions.md
    release:
        runs-on: ubuntu-latest
        permissions:
            contents: write # to be able to publish a GitHub release
            issues: write # to be able to comment on released issues
            pull-requests: write # to be able to comment on released pull requests
        steps:
            # Check out the code to be able to deploy
            - name: 'Checking out code'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            # Setting up Node, 18 is LTS
            - name: 'Setting up Node'
              uses: actions/setup-node@v3
              with:
                  node-version: 18
            # Install semantic release
            - name: 'Releasing via Semantic Release'
              run: npx semantic-release@21
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
